name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: webapp/node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('webapp/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
            
      - name: Install Go dependencies
        run: go mod download
        
      - name: Install webapp dependencies
        run: cd webapp && pnpm install
        
      - name: Scrape episodes data (lazy mode)
        run: make scrape-lazy
        
      - name: Generate tags database
        run: make generate-tags
        
      - name: Generate webapp data for GitHub Pages
        run: make generate-data-ghpages
        
      - name: Copy data files to webapp public directory
        run: |
          mkdir -p webapp/public/data
          cp -r data/* webapp/public/data/
          
      - name: Copy local images to webapp public directory
        run: |
          mkdir -p webapp/public/images
          find capitols -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" -o -name "*.webp" | \
          while read img; do \
            if [ -f "$img" ]; then \
              cp "$img" webapp/public/images/; \
            fi; \
          done
          
      - name: Build webapp for GitHub Pages
        run: |
          cd webapp
          # Use the correct base path for your deployment at dabax.net/enguardia-web/
          pnpm build --base=/enguardia-web/
          
      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: webapp/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2